{% extends 'layout/base.twig' %}
{% import 'macros/helpers.twig' as helpers %}

{% block title %}
- Run list
{% endblock %}

{% block content %}
<h1>{{ title }}</h1>

{% if runs|length or filter.hasSearch() %}
<div class="searchbar clearfix">

    {{ helpers.column_selector(main_list_columns, default_list_columns, "main_list_columns") }}

    <a href="{{ url('run.deleteAll.form') }}" class="pull-right btn btn-small delete-all" title="Delete all">
        <i class="icon-trash"></i> Delete all
    </a>

    <a href="#" class="pull-right btn btn-small search-expand" title="Show search form">
        <i class="icon-search"></i> Search
    </a>

    <form action="{{ url('home') }}" method="get" class="row hide search-form form-inline">
        <a href="#" class="search-collapse close" title="Hide search form">&times;</a>
        <div class="control-group span3">
            <label class="control-label" for="startDate">Date range</label>
            <div class="controls">
                <input type="text" id="startDate" data-date-format="yyyy-mm-dd" name="startDate" class="datepicker span2" value="{{ search.startDate }}">
                <input type="text" id="endDate" data-date-format="yyyy-mm-dd" name="endDate" class="datepicker span2" value="{{ search.endDate }}"><br />
                <small class="muted">Either unix timestamps or date time string formatted as YYYY-MM-DD H:i:s</small>
            </div>
        </div>
        <div class="control-group span3">
            <label class="control-label" for="url">URL</label>
            <div class="controls">
                <input type="text" id="url" name="url" value="{{ search.url }}">
            </div>
        </div>
        <div class="control-group span3">
            <label class="control-label" for="application">Application</label>
            <div class="controls">
                <input type="text" id="application" name="application" value="{{ search.application|join(', ') }}">
            </div>
        </div>
        <div class="control-group span3">
            <label class="control-label" for="controller">Controller</label>
            <div class="controls">
                <input type="text" id="controller" name="controller" value="{{ search.controller|join(', ') }}">
            </div>
        </div>
        <div class="control-group span3">
            <label class="control-label" for="action">Action</label>
            <div class="controls">
                <input type="text" id="action" name="action" value="{{ search.action|join(', ') }}">
            </div>
        </div>
        <div class="control-group span3">
            <label class="control-label" for="version">Version</label>
            <div class="controls">
                <input type="text" id="version" name="version" value="{{ search.version|join(', ') }}">
            </div>
        </div>
        <div class="form-actions">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
        {% if current_handler.id %}
        <input name="handler" type="hidden" value="{{ current_handler.id }}" />
        <input name="force" type="hidden" value="{{ search.force }}" />
        {% endif %}
    </form>
</div>
{% endif %}

{# No run data, and no search, must be just getting started #}
{% if not runs|length and not filter.hasSearch() %}
<div class="hero-unit">
    <h3>Looks like you haven't done any profiling</h3>
    <p>To get started with PhpPerfTools/Gui you'll need to collect some profiling data.</p>
    <p>The simplest way to get an application profiled, is to use <code>external/header.php</code>.
        This file is designed to be combined with PHP's
        <a href="http://www.php.net/manual/en/ini.core.php#ini.auto-prepend-file">auto_prepend_file</a>
		directive. This can be enabled system-wide through <code>php.ini</code>. Alternatively, you can enable
        <code>auto_prepend_file</code> per virtual host. See the README.md file for more details.
    </p>
</div>
{% endif %}
    <div id='chart'></div>
    </div>
    <script type="javascript">

        var chart = c3.generate({
            data: {
                xs: {
                    setosa: 'setosa_x',
                    versicolor: 'versicolor_x',
                },
                // iris data from R
                columns: [
                    ["setosa_x", 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.4, 3.0, 3.0, 4.0, 4.4, 3.9, 3.5, 3.8, 3.8, 3.4, 3.7, 3.6, 3.3, 3.4, 3.0, 3.4, 3.5, 3.4, 3.2, 3.1, 3.4, 4.1, 4.2, 3.1, 3.2, 3.5, 3.6, 3.0, 3.4, 3.5, 2.3, 3.2, 3.5, 3.8, 3.0, 3.8, 3.2, 3.7, 3.3],
                    ["versicolor_x", 3.2, 3.2, 3.1, 2.3, 2.8, 2.8, 3.3, 2.4, 2.9, 2.7, 2.0, 3.0, 2.2, 2.9, 2.9, 3.1, 3.0, 2.7, 2.2, 2.5, 3.2, 2.8, 2.5, 2.8, 2.9, 3.0, 2.8, 3.0, 2.9, 2.6, 2.4, 2.4, 2.7, 2.7, 3.0, 3.4, 3.1, 2.3, 3.0, 2.5, 2.6, 3.0, 2.6, 2.3, 2.7, 3.0, 2.9, 2.9, 2.5, 2.8],
                    ["setosa", 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.2, 0.1, 0.1, 0.2, 0.4, 0.4, 0.3, 0.3, 0.3, 0.2, 0.4, 0.2, 0.5, 0.2, 0.2, 0.4, 0.2, 0.2, 0.2, 0.2, 0.4, 0.1, 0.2, 0.2, 0.2, 0.2, 0.1, 0.2, 0.2, 0.3, 0.3, 0.2, 0.6, 0.4, 0.3, 0.2, 0.2, 0.2, 0.2],
                    ["versicolor", 1.4, 1.5, 1.5, 1.3, 1.5, 1.3, 1.6, 1.0, 1.3, 1.4, 1.0, 1.5, 1.0, 1.4, 1.3, 1.4, 1.5, 1.0, 1.5, 1.1, 1.8, 1.3, 1.5, 1.2, 1.3, 1.4, 1.4, 1.7, 1.5, 1.0, 1.1, 1.0, 1.2, 1.6, 1.5, 1.6, 1.5, 1.3, 1.3, 1.3, 1.2, 1.4, 1.2, 1.0, 1.3, 1.2, 1.3, 1.3, 1.1, 1.3],
                ],
                type: 'scatter'
            },
            axis: {
                x: {
                    label: 'Sepal.Width',
                    tick: {
                        fit: false
                    }
                },
                y: {
                    label: 'Petal.Width'
                }
            }
        });

        setTimeout(function () {
            chart.load({
                xs: {
                    virginica: 'virginica_x'
                },
                columns: [
                    ["virginica_x", 3.3, 2.7, 3.0, 2.9, 3.0, 3.0, 2.5, 2.9, 2.5, 3.6, 3.2, 2.7, 3.0, 2.5, 2.8, 3.2, 3.0, 3.8, 2.6, 2.2, 3.2, 2.8, 2.8, 2.7, 3.3, 3.2, 2.8, 3.0, 2.8, 3.0, 2.8, 3.8, 2.8, 2.8, 2.6, 3.0, 3.4, 3.1, 3.0, 3.1, 3.1, 3.1, 2.7, 3.2, 3.3, 3.0, 2.5, 3.0, 3.4, 3.0],
                    ["virginica", 2.5, 1.9, 2.1, 1.8, 2.2, 2.1, 1.7, 1.8, 1.8, 2.5, 2.0, 1.9, 2.1, 2.0, 2.4, 2.3, 1.8, 2.2, 2.3, 1.5, 2.3, 2.0, 2.0, 1.8, 2.1, 1.8, 1.8, 1.8, 2.1, 1.6, 1.9, 2.0, 2.2, 1.5, 1.4, 2.3, 2.4, 1.8, 1.8, 2.1, 2.4, 2.3, 1.9, 2.3, 2.5, 2.3, 1.9, 2.0, 2.3, 1.8],
                ]
            });
        }, 1000);

        setTimeout(function () {
            chart.unload({
                ids: 'setosa'
            });
        }, 2000);

        setTimeout(function () {
            chart.load({
                columns: [
                    ["virginica", 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.2, 0.1, 0.1, 0.2, 0.4, 0.4, 0.3, 0.3, 0.3, 0.2, 0.4, 0.2, 0.5, 0.2, 0.2, 0.4, 0.2, 0.2, 0.2, 0.2, 0.4, 0.1, 0.2, 0.2, 0.2, 0.2, 0.1, 0.2, 0.2, 0.3, 0.3, 0.2, 0.6, 0.4, 0.3, 0.2, 0.2, 0.2, 0.2],
                ]
            });
        }, 3000);
    </script>

{% if runs|length or filter.hasSearch() %}
    {% include 'runs/paginated-list.twig' %}
{% endif %}

{% if runs|length %}
    {{ helpers.pagination('home', paging, search) }}
{% endif %}


{% endblock %}
